{"version":3,"file":"static/js/186.d3f8e90b.chunk.js","mappings":"sSAKMA,E,MAAWC,EAAAA,OAAa,CAC1BC,QAHQ,+BAIRC,OAAQ,CACJC,QANI,sCAUCC,EAAiB,mCAAG,sGACNL,EAASM,IAAI,uBADP,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,yFACJT,EAASM,IAAT,iBAAuBG,IADnB,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfG,EAAe,mCAAG,WAAOD,GAAP,yFACJT,EAASM,IAAT,iBAAuBG,EAAvB,aADI,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfI,EAAe,mCAAG,WAAOF,GAAP,yFACJT,EAASM,IAAT,iBAAuBG,EAAvB,aADI,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfK,EAAe,mCAAG,WAAOC,GAAP,yFACJb,EAASM,IAAT,gBAA8B,CACjDH,OAAQ,CAACU,MAAAA,KAFc,uBACnBN,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qD,mEC/B5B,EAAyB,uB,SCElB,SAASO,IACZ,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACIC,YAAY,MACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIpB,C,wJCTc,SAASC,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQpB,GAAOqB,EAAAA,EAAAA,MAAPrB,GAkBV,OAhBEsB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,oGAEbL,GAAW,GACXE,EAAS,MAHI,UAIMlB,EAAAA,EAAAA,IAAgBF,GAJtB,OAIPF,EAJO,OAKbkB,EAASlB,GALI,gDAObsB,EAAS,EAAD,IAPK,yBASbF,GAAW,GATE,4EAAH,qDAYlBK,GACL,GAAE,CAACvB,KAGA,0BACKiB,IAAW,SAAC,IAAD,IACXE,IAAS,gDACTJ,GAAUA,EAAMS,cACbT,EAAMU,QAAQC,KAAI,gBAAG1B,EAAH,EAAGA,GAAI2B,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACd,2BACE,oCAAYD,MACZ,uBAAIC,MAFG5B,EADK,KAMlB,sEAIb,C","sources":["API/API.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = \"3dd1fe04673ec54a7a07b66c5de36e89\";\nconst URL = \"https://api.themoviedb.org/3\";\n\nconst instance = axios.create({\n    baseURL: URL,\n    params: {\n        api_key: KEY,\n    }\n});\n\nexport const getTrendingMovies = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");\n    return data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}\n\nexport const getSearchMovies = async (query) => {\n    const { data } = await instance.get(`/search/movie`, {\n        params: {query}\n    });\n    return data;\n}","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport function Loader() {\n    return (\n      <div className={css.loader}>\n        <RotatingLines\n            strokeColor=\"red\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"60\"\n            visible={true}\n        />        \n      </div>\n  )\n}","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getMovieReviews } from \"API/API\";\nimport { Loader } from \"../Loader/Loader\";\n\nexport default function Reviews() {\n    const [state, setState] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                setLoading(true);\n                setError(null);\n                const data = await getMovieReviews(id);\n                setState(data);\n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchReviews();\n  }, [id]);\n\n  return (\n      <ul>\n          {loading && <Loader />}\n          {error && <p>Something went wrong</p>}\n          {state &&  state.total_results ? \n              state.results.map(({ id, author, content }) => \n                  <li key={id}>\n                    <b>Author: {author}</b>\n                    <p>{content}</p>\n                  </li>\n              ) : \n              <p>We don't have any reviews for this movie</p>\n          }\n      </ul>\n    )\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getMovieDetails","id","getMovieCredits","getMovieReviews","getSearchMovies","query","Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","Reviews","useState","state","setState","loading","setLoading","error","setError","useParams","useEffect","fetchReviews","total_results","results","map","author","content"],"sourceRoot":""}