{"version":3,"file":"static/js/76.f1f6ae43.chunk.js","mappings":"qSAKMA,E,MAAWC,EAAAA,OAAa,CAC1BC,QAHQ,+BAIRC,OAAQ,CACJC,QANI,sCAUCC,EAAiB,mCAAG,sGACNL,EAASM,IAAI,uBADP,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,yFACJT,EAASM,IAAT,iBAAuBG,IADnB,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfG,EAAe,mCAAG,WAAOD,GAAP,yFACJT,EAASM,IAAT,iBAAuBG,EAAvB,aADI,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfI,EAAe,mCAAG,WAAOF,GAAP,yFACJT,EAASM,IAAT,iBAAuBG,EAAvB,aADI,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfK,EAAe,mCAAG,WAAOC,GAAP,yFACJb,EAASM,IAAT,gBAA8B,CACjDH,OAAQ,CAACU,MAAAA,KAFc,uBACnBN,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qD,qIC/B5B,EAAwB,oB,2BCOT,SAASO,IAEpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQZ,GAAOa,EAAAA,EAAAA,MAAPb,GAkBR,OAhBAc,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEVL,GAAW,GACXE,EAAS,MAHC,UAISX,EAAAA,EAAAA,IAAgBD,GAJzB,OAIJF,EAJI,OAKVU,EAASV,EAAKkB,MALJ,gDAOVJ,EAAS,EAAD,IAPE,yBASVF,GAAW,GATD,4EAAH,qDAYfK,GACH,GAAE,CAACf,KAGA,0BACKS,IAAW,SAACQ,EAAA,EAAD,IACXN,IAAS,gDACTJ,GAASA,EAAMW,OAAS,EACrBX,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,cAAeC,EAAzC,EAAyCA,UAAzC,OACN,2BACI,gBAAKC,UAAWC,EAAWC,IAAKL,EAAY,0CAAsCA,GAAiBM,EAAeC,IAAKN,KACvH,uBAAIA,KACJ,uCAAeC,OAHVH,EADH,KAON,qFAInB,C,mEC/CD,EAAyB,uB,SCElB,SAASH,IACZ,OACE,gBAAKO,UAAWC,EAAhB,UACE,SAAC,KAAD,CACII,YAAY,MACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIpB,C","sources":["API/API.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = \"3dd1fe04673ec54a7a07b66c5de36e89\";\nconst URL = \"https://api.themoviedb.org/3\";\n\nconst instance = axios.create({\n    baseURL: URL,\n    params: {\n        api_key: KEY,\n    }\n});\n\nexport const getTrendingMovies = async () => {\n    const { data } = await instance.get(\"/trending/movie/day\");\n    return data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}\n\nexport const getSearchMovies = async (query) => {\n    const { data } = await instance.get(`/search/movie`, {\n        params: {query}\n    });\n    return data;\n}","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"Cast_image__mOsuM\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport imageNotFound from \"../../image/image-not-found.png\";\nimport css from \"./Cast.module.css\";\nimport { getMovieCredits } from \"API/API\";\nimport { Loader } from \"../Loader/Loader\";\n\nexport default function Cast() {\n\n    const [state, setState] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            try {\n                setLoading(true);\n                setError(null);\n                const data = await getMovieCredits(id);\n                setState(data.cast);\n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchCast();\n    }, [id]);\n\n    return (\n        <ul>\n            {loading && <Loader />}\n            {error && <p>Something went wrong</p>}\n            {state && state.length > 0 ?\n                state.map(({ cast_id, profile_path, original_name, character }) => \n                    <li key={cast_id}>\n                        <img className={css.image} src={profile_path ? `https://image.tmdb.org/t/p/w300/${profile_path}` : imageNotFound} alt={original_name} />\n                        <p>{original_name}</p>\n                        <p>Character: {character}</p>\n                    </li>\n                    ) :\n                    <p>We don't have any information about cast for this movie</p>\n            }\n        </ul>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport function Loader() {\n    return (\n      <div className={css.loader}>\n        <RotatingLines\n            strokeColor=\"red\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"60\"\n            visible={true}\n        />        \n      </div>\n  )\n}"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getMovieDetails","id","getMovieCredits","getMovieReviews","getSearchMovies","query","Cast","useState","state","setState","loading","setLoading","error","setError","useParams","useEffect","fetchCast","cast","Loader","length","map","cast_id","profile_path","original_name","character","className","css","src","imageNotFound","alt","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}